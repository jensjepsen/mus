name: Create Release

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Poetry
        run: |
            curl -sSL https://install.python-poetry.org | python3 -
            echo "$HOME/.local/bin" >> $GITHUB_PATH
        
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true
            
      - name: Install Dependencies
        run: poetry install --no-interaction --no-root
    
      - name: Configure Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Bump version
        run: |
          poetry run bump2version ${{ github.event.inputs.bump_type }}
          echo "NEW_VERSION=$(bump2version --dry-run --list ${{ github.event.inputs.bump_type }} | grep current_version | sed -r s,"^.*=",,)" >> $GITHUB_ENV

      - name: Push changes
        run: |
          git push
          git push --tags

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          draft: false
          prerelease: false

      - name: Build project
        run: poetry build

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/your_project_name-${{ env.NEW_VERSION }}-py3-none-any.whl
          asset_name: your_project_name-${{ env.NEW_VERSION }}-py3-none-any.whl
          asset_content_type: application/octet-stream