[project]
name = "mus"
version = "0.23.1"
description = ""
authors = [
    {name="Jens Jepsen", email="jens.jepsen@gmail.com"}
]
license = "MIT"
readme = "README.md"
requires-python = "==3.12.*"

dependencies  = [
    "anyio>=4.10.0",
    "cattrs>=24.1.0",
    "fastjsonschema>=2.21.2",
    "requests(>=2.32.3,<3.0.0)",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.hooks.custom]
path = "scripts/build_guest.py"

[project.optional-dependencies]
bedrock = ["boto3(>=1.38.19.95,<2.0.0)",  "boto3-stubs[bedrock-runtime](>=1.35.95,<2.0.0)", "anyio>=4.9.0"]
anthropic  = ["anthropic[bedrock](>=0.42.0,<1.0.0)"]
openai  = ["openai(>=1.108.1,<2.0.0)"]
google = ["google-genai>=1.20.0"]
mistral = ["mistralai>=1.9.1"]
images  = ["pillow(>=11.0.0,<12.0.0)"]
cli  = ["typer(>=0.13.0,<0.17.0)"]
pyodide = ["partial_json_parser>=0.2.1.1.post5"]
sandbox = ["wasmtime==34.0.0"]
mcp-client = ["mcp>=1.9.1"]
dev = [
    "pytest(>=8.3.3,<9.0.0)",
    "bump2version(>=1.0.1,<2.0.0)",
    "pytest-asyncio(>=0.25.3,<2.0.0)",
    "pytest-cov(>=6.0.0,<8.0.0)",
    "coverage[toml](>=7.6.10,<8.0.0)",
    "pytest-md-report(>=0.6.3,<1.0.0)",
    "sybil[pytest](>=9.0.0,<10.0.0)",
    "pyright(>=1.1.398,<2.0.0)",
    "componentize-py(>=0.17.0,<0.18.0)",
    "mcp>=1.9.1", 
    "ruff>=0.12.0",
    "pydantic>=2.7.1,<3.0.0", # only used to test if we can handle pydantic models when generating schemas
]
all = [
    "boto3(>=1.38.19,<2.0.0)", 
    "boto3-stubs[bedrock-runtime](>=1.35.95,<2.0.0)",
    "anthropic[bedrock](>=0.42.0,<1.0.0)",
    "openai(>=1.61.1,<2.0.0)",
    "pillow(>=11.0.0,<12.0.0)",
    "typer(>=0.13.0,<0.17.0)",
    "wasmtime>=32.0.0",
    "mcp>=1.9.1",
    "google-genai>=1.20.0",
    "mistralai>=1.9.1",
]

[tool.uv]
native-tls = true
package = true

[tool.ruff]
include = ["pyproject.toml", "src/**/*.py"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.23.1"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
]
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"

[tool.pyright]
include = ["src"]
exclude = ["src/mus/guest/bindings"]

[tool.pytest.ini_options]
pythonpath = "src"
testpaths = ["tests", "*.md"]
addopts = "--cov=src"

[tool.coverage.run]
omit = ["src/mus/guest/bindings/*"]

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if __name__ == .__main__.:",
    "if (t\\.|typing\\.|)TYPE_CHECKING:",
    "class .*\\bProtocol.*\\):",
    "@(abc\\.)?abstractmethod",
    ]

